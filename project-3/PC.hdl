// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    //// Replace this comment with your code.

    Register(in= ValueToUpdateReg, load= true, out= out, out= currentRegisterValue);
    Inc16(in= currentRegisterValue, out= IncrementedCurrRegVal);
    Mux16(a= currentRegisterValue, b= IncrementedCurrRegVal, sel= inc, out= IncORCurrRegVal);
    Mux16(a= IncORCurrRegVal, b= in, sel= load, out= InputValueORIncOrCurrRegVal);
    Mux16(a= InputValueORIncOrCurrRegVal, b= false, sel= reset, out= ValueToUpdateReg);


    // This trapped me in combinatorial thinking
    // reset load inc  out(t+1)
    //   0     0   0    out(t)
    //   0     0   1    out(t) + 1
    //   0     1   0     in(t)
    //   0     1   1    out(t)
    //   1     0   0      0
    //   1     0   1    out(t)
    //   1     1   0    out(t)
    //   1     1   1    out(t)
}