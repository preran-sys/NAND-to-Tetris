// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.

    DMux8Way(in= load, sel= address[0..2], a= ram1, b= ram2, c= ram3, d= ram4, e= ram5, f= ram6, g= ram7, h= ram8);
    RAM8(in= in, load= ram1, address= address[3..5], out= ram1out);
    RAM8(in= in, load= ram2, address= address[3..5], out= ram2out);
    RAM8(in= in, load= ram3, address= address[3..5], out= ram3out);
    RAM8(in= in, load= ram4, address= address[3..5], out= ram4out);
    RAM8(in= in, load= ram5, address= address[3..5], out= ram5out);
    RAM8(in= in, load= ram6, address= address[3..5], out= ram6out);
    RAM8(in= in, load= ram7, address= address[3..5], out= ram7out);
    RAM8(in= in, load= ram8, address= address[3..5], out= ram8out);

    Mux8Way16(a= ram1out, b= ram2out, c= ram3out, d= ram4out, 
            e= ram5out, f= ram6out, g= ram7out, h= ram8out, 
            sel= address[0..2], out= out);
}