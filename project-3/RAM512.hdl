// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in= load, sel= address[0..2], a= load1, b= load2, c= load3, d= load4, e= load5, f= load6, g= load7, h= load8);

/*
    DMux8Way(in= load1, sel= address[3..5], a= load1ram1, b= load1ram2, c= load1ram3, d= load1ram4, e= load1ram5, f= load1ram6, g= load1ram7, h= load1ram8);
    DMux8Way(in= load2, sel= address[3..5], a= load2ram1, b= load2ram2, c= load2ram3, d= load2ram4, e= load2ram5, f= load2ram6, g= load2ram7, h= load2ram8);
    DMux8Way(in= load3, sel= address[3..5], a= load3ram1, b= load3ram2, c= load3ram3, d= load3ram4, e= load3ram5, f= load3ram6, g= load3ram7, h= load3ram8);
    DMux8Way(in= load4, sel= address[3..5], a= load4ram1, b= load4ram2, c= load4ram3, d= load4ram4, e= load4ram5, f= load4ram6, g= load4ram7, h= load4ram8);
    DMux8Way(in= load5, sel= address[3..5], a= load5ram1, b= load5ram2, c= load5ram3, d= load5ram4, e= load5ram5, f= load5ram6, g= load5ram7, h= load5ram8);
    DMux8Way(in= load6, sel= address[3..5], a= load6ram1, b= load6ram2, c= load6ram3, d= load6ram4, e= load6ram5, f= load6ram6, g= load6ram7, h= load6ram8);
    DMux8Way(in= load7, sel= address[3..5], a= load7ram1, b= load7ram2, c= load7ram3, d= load7ram4, e= load7ram5, f= load7ram6, g= load7ram7, h= load7ram8);
    DMux8Way(in= load8, sel= address[3..5], a= load8ram1, b= load8ram2, c= load8ram3, d= load8ram4, e= load8ram5, f= load8ram6, g= load8ram7, h= load8ram8);
*/

    RAM64(in= in, load= load1, address= address[3..8], out= out1);
    RAM64(in= in, load= load2, address= address[3..8], out= out2);
    RAM64(in= in, load= load3, address= address[3..8], out= out3);
    RAM64(in= in, load= load4, address= address[3..8], out= out4);
    RAM64(in= in, load= load5, address= address[3..8], out= out5);
    RAM64(in= in, load= load6, address= address[3..8], out= out6);
    RAM64(in= in, load= load7, address= address[3..8], out= out7);
    RAM64(in= in, load= load8, address= address[3..8], out= out8);

    Mux8Way16(a= out1, b= out2, c= out3, d= out4, e= out5, f= out6, g= out7, h= out8, sel= address[0..2], out= out);
}